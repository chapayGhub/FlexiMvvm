// <auto-generated />
// =========================================================================
// Copyright 2019 EPAM Systems, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// =========================================================================

using System;
using Android.Runtime;
using FlexiMvvm.Bindings;
using FlexiMvvm.Persistence.Core;
using FlexiMvvm.ViewModels;
using FlexiMvvm.Views.Core;

namespace FlexiMvvm.Views
{
    public partial class FlexiBindableAppCompatActivity<TViewModel> : FlexiMvvm.Views.FlexiAppCompatActivity<TViewModel>, IBindableView<TViewModel>, IBindingSetOwner
        where TViewModel : class, ILifecycleViewModelWithoutParameters, IStateOwner
    {
        /// <inheritdoc />
        public FlexiBindableAppCompatActivity()
        {
        }

        /// <inheritdoc />
        protected FlexiBindableAppCompatActivity(IntPtr javaReference, JniHandleOwnership transfer)
            : base(javaReference, transfer)
        {
        }

        public IDisposable BindingSet { get; private set; }

        /// <inheritdoc />
        protected override IViewLifecycleDelegate CreateLifecycleDelegate()
        {
            return new BindableViewLifecycleDelegate<FlexiBindableAppCompatActivity<TViewModel>, TViewModel>(this);
        }

        public virtual void Bind(BindingSet<TViewModel> bindingSet)
        {
        }

        void IBindingSetOwner.SetBindingSet(IDisposable bindingSet)
        {
            BindingSet = bindingSet;
        }
    }

    public partial class FlexiBindableAppCompatActivity<TViewModel, TParameters> : FlexiMvvm.Views.FlexiAppCompatActivity<TViewModel, TParameters>, IBindableView<TViewModel>, IBindingSetOwner
        where TViewModel : class, ILifecycleViewModelWithParameters<TParameters>, IStateOwner
        where TParameters : Parameters
    {
        /// <inheritdoc />
        public FlexiBindableAppCompatActivity()
        {
        }

        /// <inheritdoc />
        protected FlexiBindableAppCompatActivity(IntPtr javaReference, JniHandleOwnership transfer)
            : base(javaReference, transfer)
        {
        }

        public IDisposable BindingSet { get; private set; }

        /// <inheritdoc />
        protected override IViewLifecycleDelegate CreateLifecycleDelegate()
        {
            return new BindableViewLifecycleDelegate<FlexiBindableAppCompatActivity<TViewModel, TParameters>, TViewModel>(this);
        }

        public virtual void Bind(BindingSet<TViewModel> bindingSet)
        {
        }

        void IBindingSetOwner.SetBindingSet(IDisposable bindingSet)
        {
            BindingSet = bindingSet;
        }
    }
}

namespace FlexiMvvm.Views
{
    public partial class FlexiBindableDialogFragment<TViewModel> : FlexiMvvm.Views.FlexiDialogFragment<TViewModel>, IBindableView<TViewModel>, IBindingSetOwner
        where TViewModel : class, ILifecycleViewModelWithoutParameters, IStateOwner
    {
        /// <inheritdoc />
        public FlexiBindableDialogFragment()
        {
        }

        /// <inheritdoc />
        protected FlexiBindableDialogFragment(IntPtr javaReference, JniHandleOwnership transfer)
            : base(javaReference, transfer)
        {
        }

        public IDisposable BindingSet { get; private set; }

        /// <inheritdoc />
        protected override IViewLifecycleDelegate CreateLifecycleDelegate()
        {
            return new BindableViewLifecycleDelegate<FlexiBindableDialogFragment<TViewModel>, TViewModel>(this);
        }

        public virtual void Bind(BindingSet<TViewModel> bindingSet)
        {
        }

        void IBindingSetOwner.SetBindingSet(IDisposable bindingSet)
        {
            BindingSet = bindingSet;
        }
    }

    public partial class FlexiBindableDialogFragment<TViewModel, TParameters> : FlexiMvvm.Views.FlexiDialogFragment<TViewModel, TParameters>, IBindableView<TViewModel>, IBindingSetOwner
        where TViewModel : class, ILifecycleViewModelWithParameters<TParameters>, IStateOwner
        where TParameters : Parameters
    {
        /// <inheritdoc />
        public FlexiBindableDialogFragment()
        {
        }

        /// <inheritdoc />
        protected FlexiBindableDialogFragment(IntPtr javaReference, JniHandleOwnership transfer)
            : base(javaReference, transfer)
        {
        }

        public IDisposable BindingSet { get; private set; }

        /// <inheritdoc />
        protected override IViewLifecycleDelegate CreateLifecycleDelegate()
        {
            return new BindableViewLifecycleDelegate<FlexiBindableDialogFragment<TViewModel, TParameters>, TViewModel>(this);
        }

        public virtual void Bind(BindingSet<TViewModel> bindingSet)
        {
        }

        void IBindingSetOwner.SetBindingSet(IDisposable bindingSet)
        {
            BindingSet = bindingSet;
        }
    }
}

namespace FlexiMvvm.Views
{
    public partial class FlexiBindableFragment<TViewModel> : FlexiMvvm.Views.FlexiFragment<TViewModel>, IBindableView<TViewModel>, IBindingSetOwner
        where TViewModel : class, ILifecycleViewModelWithoutParameters, IStateOwner
    {
        /// <inheritdoc />
        public FlexiBindableFragment()
        {
        }

        /// <inheritdoc />
        protected FlexiBindableFragment(IntPtr javaReference, JniHandleOwnership transfer)
            : base(javaReference, transfer)
        {
        }

        public IDisposable BindingSet { get; private set; }

        /// <inheritdoc />
        protected override IViewLifecycleDelegate CreateLifecycleDelegate()
        {
            return new BindableViewLifecycleDelegate<FlexiBindableFragment<TViewModel>, TViewModel>(this);
        }

        public virtual void Bind(BindingSet<TViewModel> bindingSet)
        {
        }

        void IBindingSetOwner.SetBindingSet(IDisposable bindingSet)
        {
            BindingSet = bindingSet;
        }
    }

    public partial class FlexiBindableFragment<TViewModel, TParameters> : FlexiMvvm.Views.FlexiFragment<TViewModel, TParameters>, IBindableView<TViewModel>, IBindingSetOwner
        where TViewModel : class, ILifecycleViewModelWithParameters<TParameters>, IStateOwner
        where TParameters : Parameters
    {
        /// <inheritdoc />
        public FlexiBindableFragment()
        {
        }

        /// <inheritdoc />
        protected FlexiBindableFragment(IntPtr javaReference, JniHandleOwnership transfer)
            : base(javaReference, transfer)
        {
        }

        public IDisposable BindingSet { get; private set; }

        /// <inheritdoc />
        protected override IViewLifecycleDelegate CreateLifecycleDelegate()
        {
            return new BindableViewLifecycleDelegate<FlexiBindableFragment<TViewModel, TParameters>, TViewModel>(this);
        }

        public virtual void Bind(BindingSet<TViewModel> bindingSet)
        {
        }

        void IBindingSetOwner.SetBindingSet(IDisposable bindingSet)
        {
            BindingSet = bindingSet;
        }
    }
}

